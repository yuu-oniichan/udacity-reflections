When would you want to use a remote repository rather than keeping all your work
local?

	You would probably want to use a remote repository when collaborating with other people, and when you are working on multiple computers or workstations and need to sync between these.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

	Since you are saving all your work, it is not necessary to maintain auto-saving. Instead, it would be better to manually specify when to push and pull to keep valid checkpoints in the development of your project, as well as to ensure that other people's updates on the master branch do not suddenly break the feature you're working on, or interfere otherwise.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A branch is a new version of a project that has diverged from the master branch. It allows people to work on the same project simutaneously and later allows these divergent branches to merge to different branches. This way, development along different paths can be tracked and split more easily.

    A clone is an exact working copy of a project. It is usually on a user's repository or local computer, and is similar to copying an entire project over to one's computer. Clone can be used to copy different branches at any point.

    Forks are github's way of managing branching clones between users. If user A creates a respository, then user B can create a clone or fork of that respository, but a fork will maintain the metadata of where the repository originally came from, whereas a clone might not.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    By having the last known statue of the remote stored locally, it would result in a similar situation to calling git merge, where there are three versions to check for merging changes. Incidentally, it also allows offline access, but the main point is to have a 3rd perspective from which to triangulate changes on.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
